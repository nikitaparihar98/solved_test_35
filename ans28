#include <iostream>
#include <vector>
using namespace std;

pair<int,int> firstOccurrence(vector<vector<int>> &matrix, int n, int m, int target) {
    int low = 0, high = n * m - 1;
    int ans = -1;
    while (low <= high) {
        int mid = (low + high) / 2;
        int val = matrix[mid / m][mid % m];
        if (val == target) {
            ans = mid;
            high = mid - 1;
        } else if (val < target) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    if (ans == -1) return {-1, -1};
    return {ans / m, ans % m};
}
int main() {
    int n, m;
    cin >> n >> m;
    vector<vector<int>> matrix(n, vector<int>(m));
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            cin >> matrix[i][j];
    int target;
    cin >> target;
    pair<int,int> pos = firstOccurrence(matrix, n, m, target);
    cout << "(" << pos.first << "," << pos.second << ")";
    return 0;
}
